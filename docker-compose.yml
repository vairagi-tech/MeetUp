version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: student-scheduler-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: student-scheduler
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - student-scheduler-network

  # Redis for caching and real-time features
  redis:
    image: redis:7.2-alpine
    container_name: student-scheduler-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - student-scheduler-network

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: student-scheduler-api-gateway
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - REDIS_URL=redis://redis:6379
      - USER_SERVICE_URL=http://user-service:3002
      - TIMETABLE_SERVICE_URL=http://timetable-service:3003
      - FRIENDS_SERVICE_URL=http://friends-service:3004
      - LOCATION_SERVICE_URL=http://location-service:3005
      - EVENTS_SERVICE_URL=http://events-service:3006
      - NOTIFICATION_SERVICE_URL=http://notification-service:3007
    depends_on:
      - redis
      - user-service
      - timetable-service
      - friends-service
      - location-service
      - events-service
      - notification-service
    networks:
      - student-scheduler-network

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: student-scheduler-user-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/student-scheduler-users?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
    depends_on:
      - mongodb
    networks:
      - student-scheduler-network

  # Timetable Service
  timetable-service:
    build:
      context: ./services/timetable-service
      dockerfile: Dockerfile
    container_name: student-scheduler-timetable-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/student-scheduler-timetables?authSource=admin
    depends_on:
      - mongodb
    networks:
      - student-scheduler-network

  # Friends Service
  friends-service:
    build:
      context: ./services/friends-service
      dockerfile: Dockerfile
    container_name: student-scheduler-friends-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/student-scheduler-friends?authSource=admin
    depends_on:
      - mongodb
    networks:
      - student-scheduler-network

  # Location Service
  location-service:
    build:
      context: ./services/location-service
      dockerfile: Dockerfile
    container_name: student-scheduler-location-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/student-scheduler-locations?authSource=admin
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - student-scheduler-network

  # Events Service
  events-service:
    build:
      context: ./services/events-service
      dockerfile: Dockerfile
    container_name: student-scheduler-events-service
    restart: unless-stopped
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - PORT=3006
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/student-scheduler-events?authSource=admin
    depends_on:
      - mongodb
    networks:
      - student-scheduler-network

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: student-scheduler-notification-service
    restart: unless-stopped
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=production
      - PORT=3007
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/student-scheduler-notifications?authSource=admin
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - student-scheduler-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: student-scheduler-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_WS_URL=http://localhost:3001
    depends_on:
      - api-gateway
    networks:
      - student-scheduler-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: student-scheduler-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/ssl/certs:ro
    depends_on:
      - api-gateway
      - frontend
    networks:
      - student-scheduler-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local

networks:
  student-scheduler-network:
    driver: bridge
