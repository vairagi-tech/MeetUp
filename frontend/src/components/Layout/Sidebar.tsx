import React, { Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Dialog, Transition } from '@headlessui/react';\nimport {\n  XMarkIcon,\n  HomeIcon,\n  CalendarIcon,\n  ClockIcon,\n  UserGroupIcon,\n  UsersIcon,\n  MapPinIcon,\n  CalendarDaysIcon,\n  BellIcon,\n  Cog6ToothIcon,\n} from '@heroicons/react/24/outline';\nimport { useAuth } from '../../context/AuthContext';\nimport { useSocket } from '../../context/SocketContext';\n\ninterface SidebarProps {\n  sidebarOpen: boolean;\n  setSidebarOpen: (open: boolean) => void;\n}\n\nconst navigation = [\n  { name: 'Dashboard', href: '/app/dashboard', icon: HomeIcon },\n  { name: 'Timetable', href: '/app/timetable', icon: CalendarIcon },\n  { name: 'Free Time', href: '/app/free-time', icon: ClockIcon },\n  { name: 'Friends', href: '/app/friends', icon: UserGroupIcon },\n  { name: 'Groups', href: '/app/groups', icon: UsersIcon },\n  { name: 'Map', href: '/app/map', icon: MapPinIcon },\n  { name: 'Events', href: '/app/events', icon: CalendarDaysIcon },\n  { name: 'Notifications', href: '/app/notifications', icon: BellIcon },\n  { name: 'Settings', href: '/app/settings', icon: Cog6ToothIcon },\n];\n\nconst Sidebar: React.FC<SidebarProps> = ({ sidebarOpen, setSidebarOpen }) => {\n  const { user } = useAuth();\n  const { isConnected } = useSocket();\n\n  const SidebarContent = () => (\n    <div className=\"flex flex-col h-full\">\n      {/* Logo */}\n      <div className=\"flex items-center flex-shrink-0 px-4 py-4\">\n        <div className=\"flex items-center\">\n          <div className=\"h-8 w-8 bg-blue-600 rounded-lg flex items-center justify-center\">\n            <svg\n              className=\"h-5 w-5 text-white\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\"\n              />\n            </svg>\n          </div>\n          <span className=\"ml-2 text-xl font-bold text-gray-900\">\n            Student Scheduler\n          </span>\n        </div>\n      </div>\n\n      {/* User info */}\n      <div className=\"px-4 py-3 bg-gray-50\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            {user?.photo ? (\n              <img\n                className=\"h-8 w-8 rounded-full\"\n                src={user.photo}\n                alt={user.firstName}\n              />\n            ) : (\n              <div className=\"h-8 w-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                <span className=\"text-sm font-medium text-gray-700\">\n                  {user?.firstName?.[0]}{user?.lastName?.[0]}\n                </span>\n              </div>\n            )}\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm font-medium text-gray-700\">\n              {user?.firstName} {user?.lastName}\n            </p>\n            <p className=\"text-xs text-gray-500\">\n              {user?.university} • {user?.batch}\n            </p>\n          </div>\n          {/* Online status indicator */}\n          <div className=\"ml-auto\">\n            <div\n              className={`h-2 w-2 rounded-full ${\n                isConnected ? 'bg-green-400' : 'bg-gray-400'\n              }`}\n              title={isConnected ? 'Online' : 'Offline'}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 px-2 py-4 bg-white space-y-1\">\n        {navigation.map((item) => (\n          <NavLink\n            key={item.name}\n            to={item.href}\n            className={({ isActive }) =>\n              `group flex items-center px-2 py-2 text-sm font-medium rounded-md transition-colors duration-150 ${\n                isActive\n                  ? 'bg-blue-100 text-blue-700'\n                  : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n              }`\n            }\n            onClick={() => setSidebarOpen(false)}\n          >\n            {({ isActive }) => (\n              <>\n                <item.icon\n                  className={`mr-3 flex-shrink-0 h-6 w-6 ${\n                    isActive ? 'text-blue-500' : 'text-gray-400 group-hover:text-gray-500'\n                  }`}\n                  aria-hidden=\"true\"\n                />\n                {item.name}\n              </>\n            )}\n          </NavLink>\n        ))}\n      </nav>\n\n      {/* Footer */}\n      <div className=\"flex-shrink-0 p-4 bg-gray-50\">\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <span>© 2024 Student Scheduler</span>\n          <span className={`flex items-center ${\n            isConnected ? 'text-green-600' : 'text-red-600'\n          }`}>\n            <div className={`h-2 w-2 rounded-full mr-1 ${\n              isConnected ? 'bg-green-400' : 'bg-red-400'\n            }`} />\n            {isConnected ? 'Connected' : 'Offline'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {/* Mobile sidebar */}\n      <Transition.Root show={sidebarOpen} as={Fragment}>\n        <Dialog as=\"div\" className=\"relative z-40 md:hidden\" onClose={setSidebarOpen}>\n          <Transition.Child\n            as={Fragment}\n            enter=\"transition-opacity ease-linear duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"transition-opacity ease-linear duration-300\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 flex z-40\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"-translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"-translate-x-full\"\n            >\n              <Dialog.Panel className=\"relative flex-1 flex flex-col max-w-xs w-full bg-white\">\n                <Transition.Child\n                  as={Fragment}\n                  enter=\"ease-in-out duration-300\"\n                  enterFrom=\"opacity-0\"\n                  enterTo=\"opacity-100\"\n                  leave=\"ease-in-out duration-300\"\n                  leaveFrom=\"opacity-100\"\n                  leaveTo=\"opacity-0\"\n                >\n                  <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                    <button\n                      type=\"button\"\n                      className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                      onClick={() => setSidebarOpen(false)}\n                    >\n                      <span className=\"sr-only\">Close sidebar</span>\n                      <XMarkIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </Transition.Child>\n                <SidebarContent />\n              </Dialog.Panel>\n            </Transition.Child>\n            <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\n              {/* Force sidebar to shrink to fit close icon */}\n            </div>\n          </div>\n        </Dialog>\n      </Transition.Root>\n\n      {/* Static sidebar for desktop */}\n      <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n        <div className=\"flex-1 flex flex-col min-h-0 border-r border-gray-200 bg-white\">\n          <SidebarContent />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Sidebar;
